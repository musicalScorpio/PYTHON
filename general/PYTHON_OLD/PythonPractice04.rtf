{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
# Example of a Python class, populate it and then call it.\
\
class Person (object):\
    #Think of this as a Constructor in Java\
    def __init__ (self, name):\
        self.name= name\
    def setName(self,name):\
        self.name =name\
    #toString in Java\
    def __str__ (self):\
        toString ='======== '+str(self.name) +' ===== '\
        return toString\
\
p = Person('Sam')\
p.setName('Nikki')\
\
print (p.name)\
print (p)\
\
#inheritance\
\
class IITPerson (Person):\
    pass\
\
p = IITPerson('Sammy')\
print (p)\
print (type (p))\
\
import datetime\
import time\
\
class IITPerson001 (IITPerson):\
    #Will not change upon calling multiple times\
    classVariable = datetime.datetime.now()\
    #Classs Variable\
    idNum =0\
    def __init__ (self, name):\
        self.name= name\
        self.instancevalriable = datetime.datetime.now()\
        IITPerson001.idNum +=1\
    \
    def __str__ (self):\
        toString ='!!!!!!! '+str(self.name) +' !!!!!!!'\
        return toString\
    #Think of this as a Comparator\
    def __lt__ (self, other):\
        return self.name < other.name\
    \
\
\
p1 = IITPerson001('Sammy')\
print (p1.idNum)\
print (type (p1))\
\
p = IITPerson001('Nik')\
print (p.idNum)\
\
list =[p1,p]\
list.sort()\
for i in list:\
    print (str (i))\
\
\
 }